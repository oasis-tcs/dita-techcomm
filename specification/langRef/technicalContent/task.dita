<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="task" xml:lang="en-us">
<title><xmlelement>task</xmlelement></title>
  <abstract>
    <!--<shortdesc>The <xmlelement>task</xmlelement> element is the top-level element for a task topic. Task topics provide step-by-step instructions that enable a user to perform a task; they tell the user precisely what to do and the order in which to do it.</shortdesc>-->
    <shortdesc>The <xmlelement>task</xmlelement> element is the top-level element for a task topic.
      Task topics provide instructions that enable a user to perform a task.<draft-comment
        author="Eliot Kimber">In addition to using passive voice per my general comment on short
        descriptions, I would say "Task topics provide instructions that guide the performance of a
          task.".<p>The task, by itself, is not an enabler, in that it does not grant the authority,
          ability, or power to perform the task--it only defines the procedure by which the task
          should be performed.</p></draft-comment></shortdesc>
  </abstract>
<prolog><metadata>
<keywords><indexterm><xmlelement>task</xmlelement></indexterm><indexterm>task elements<indexterm><xmlelement>task</xmlelement></indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
  <section id="usage-information">
      <title>Usage information</title>
      <p>The OASIS DITA Technical Committee distributes two document-type
        shells for task topics: general task and strict task.</p>
      <dl>
        <dlentry>
          <dt>General task</dt>
          <dd>Has a more relaxed content model. It allows
              <xmlelement>section</xmlelement> and
              <xmlelement>steps-informal</xmlelement> inside of the task
            body; it also allows multiple instances and varying order for
            the elements that make up the task body.</dd>
        </dlentry>
        <dlentry>
          <dt>(Strict) task</dt>
          <dd>Maintains a strict order and cardinality for elements within the
              <xmlelement>taskbody</xmlelement> content model. The strict task is implemented with a
            constraint module.</dd>
        </dlentry>
      </dl>
      <!--<draft-comment author="Kristen J Eberlein" time="07 October 2022"><p>I think this information, as currently written, belongs elsewere -\- perhaps in whatever overview topic we have about task.</p><p>Here, I think we just need to say that the content model for the task topic varies based on what document-type shell is in use. And honestly, I think the information should be in the <xmlelement>taskbody</xmlelement> topic rather than here.</p><p>For example: "The content model for the task topic varies depending on whether the (strict) task or general task document-type shell is in use."</p></draft-comment>-->
    </section>
  <section id="specialization-hierarchy">
   <title>Specialization hierarchy</title>
   <p>The <xmlelement>task</xmlelement> element is specialized from <xmlelement>topic</xmlelement>.
        It is defined in the task module.</p>
  </section>
  <section id="attributes">
   <title>Attributes</title>
   <div conkeyref="reuse-attributes/topic-attributes"/>
  </section>
  <example id="example" otherprops="examples">
   <title>Example</title>
      <p>The following code sample shows that <xmlelement>task</xmlelement>
        is the topic-level element for a task topic:</p>
   <codeblock>&lt;task id="learn-dita">
  &lt;title>Learning DITA&lt;/title>
  &lt;!-- ... -->
&lt;/task></codeblock>
  </example>
</refbody>
</reference>

