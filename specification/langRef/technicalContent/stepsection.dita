<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="stepsection" xml:lang="en-us">
<title><xmlelement>stepsection</xmlelement></title>
<shortdesc>The <xmlelement>stepsection</xmlelement> element contains expository text that might be
    rendered before a step.</shortdesc>
<prolog><metadata>
<keywords><indexterm><xmlelement>stepsection</xmlelement></indexterm>
        <indexterm>rendering
                    expectations<indexterm><xmlelement>stepsection</xmlelement></indexterm></indexterm>
        <indexterm>task elements</indexterm>
        <indexterm><xmlelement>stepsection</xmlelement></indexterm></keywords>
</metadata></prolog>
<refbody>
    <section id="rendering-expectations">
            <title>Rendering expectations</title>
            <p>Processors which render the content of <xmlelement>stepsection</xmlelement> elements
        among the <xmlelement>step</xmlelement> elements <term outputclass="RFC-2119">MUST
          NOT</term> number the <xmlelement>stepsection</xmlelement> elements.</p>
      <draft-comment author="dstevens73">Is it a rendering expectation that the numbering of the
        step elements is not interrupted â€“ ie doesn't start over? This element is a source of
        confusion in my clients often who see it as a way to provide more than one set of steps in a
        single topic; ie when they have multiple ways to complete a task. they are surprised when
        the steps don't renumber after a stepsection. The example indicates the numbering
        expectation, but I wonder if it would help to provide more detail here.<div>
          <p>Kris Eberlein, 19 October 2022</p>
          <p>@Dawn, what additional detail would you want here?</p>
        </div></draft-comment>
        </section>
    <section id="specialization-hierarchy">
      <title>Specialization hierarchy</title>
      <p>The <xmlelement>stepsection</xmlelement> element is specialized from
                    <xmlelement>li</xmlelement>. It is defined in the task module.</p>
    </section>
    <section id="attributes">
      <title>Attributes</title>
      <p conkeyref="reuse-attributes/only-universal"/>
    </section>
    <example id="example" otherprops="examples">
      <title>Example</title>
            <p>The following code sample shows how a
          <xmlelement>stepsection</xmlelement> element might be used:</p>
      <codeblock>&lt;steps>
  &lt;step>
    &lt;cmd>Get out a bowl.&lt;/cmd>
  &lt;/step>
  <b>&lt;stepsection></b>The next two steps are very important!<b>&lt;/stepsection></b>
  &lt;step>
    &lt;cmd>Put on safety gloves.&lt;/cmd>
  &lt;/step>
  &lt;step>
    &lt;cmd>Put on goggles.&lt;/cmd>
  &lt;/step>
  &lt;step>
    &lt;cmd>Pour milk and cereal into the bowl.&lt;/cmd>
  &lt;/step>
&lt;/steps></codeblock>
      <p>The code sample above typically would be rendered with "Get out a bowl" as step number one,
                "Put on safety gloves" as step number two, and "The next two steps are very
                important!" as an unnumbered item in between the first two items.</p>
      <draft-comment author="dstevens73">probably the most common use of stepsection I see is for
        the (unnecessary) "To do task, complete the following steps" sentence. I'm wondering if that
        practice should be part of an example?<div>
          <p>Kris Eberlein, 19 October 2022</p>
          <p>@Dawn, are you suggesting that we include "To do task, complete the following steps" in
            a &lt;stepsection>? I don't think we want to show BAD tagging practices ...</p>
        </div></draft-comment>
    </example>
</refbody>
</reference>

