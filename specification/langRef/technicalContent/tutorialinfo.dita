<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="tutorialinfo" xml:lang="en-us">
<title><xmlelement>tutorialinfo</xmlelement></title>
<shortdesc>The <xmlelement>tutorialinfo</xmlelement> element contains additional information that is
    useful when the task topic is part of a tutorial.<draft-comment author="Zoë Lawson"
      time="30 Oct 2022" disposition="Closed">I know that we're not listing what elements go where
      because the dtd/rng files should be validating that, and this is the spec and not a user
      guide, but I had zero idea this element existed. <p>My brain is also bending trying to think
        about creating different processing so that elements are inherently conditional, as opposed
        to using attributes, and how that may (or may not) be different. </p><div>
        <p>Kris Eberlein, 30 October 2022</p>
        <p>I don't think there are ever "inherently conditional" attributes. The use case for
          &lt;tutorialinfo> is that you can use a single task topic to generate both task procedures
          AND learning exercises. (This element was part of DITA 1.0 and predates the learning and
          training specialization.) The idea was that you would use the &lt;tutorialinfo> element
          to, for example, contain the values that a user would need when working through a
          tutorial, apply a conditional processing attribute to the &lt;tutorialinfo> element, and
          exclude the &lt;tutorialinfo> element when building the standard task topic.</p>
      </div></draft-comment></shortdesc>
<prolog><metadata>
<keywords><indexterm><xmlelement>tutorialinfo</xmlelement></indexterm><indexterm>task elements<indexterm><xmlelement>tutorialinfo</xmlelement></indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section id="specialization-hierarchy">
<title>Specialization hierarchy</title>
<p>The <xmlelement>tutorialinfo</xmlelement> element is specialized from
          <xmlelement>div</xmlelement>. It is defined in the task module.</p>
</section>
<section id="attributes"><title>Attributes</title>
      <p conkeyref="reuse-attributes/only-universal"/>
   </section>
<example id="example" otherprops="examples"><title>Example</title><p>The following code sample shows
        how the <xmlelement>tutorialinfo</xmlelement> element might be used in a task topic that is
        part of a tutorial.</p><codeblock>&lt;steps&gt;
  &lt;step&gt;
    &lt;cmd&gt;Do this&lt;/cmd&gt;
    <b>&lt;tutorialinfo&gt;</b>In your editor, open the first element and click on 
      the dialog.
    <b>&lt;/tutorialinfo&gt;</b>
  &lt;/step&gt;
  &lt;step&gt;
    &lt;cmd&gt;Do that&lt;/cmd&gt;
    <b>&lt;tutorialinfo&gt;</b>Move the framulator into the foobar box.<b>&lt;/tutorialinfo&gt;</b>
  &lt;/step&gt;
&lt;/steps&gt;</codeblock> <draft-comment author="dstevens73" disposition="Accepted">Clearly
        we need a better example. I see this most often used in situations where a task topic might
        be reused in a tutorial. so the cmd itself is generic to work in the user guide, and the
        tutorialinfo, which renders only in the tutorial, provides detailed information about a
        scenario, which is often presented in the &lt;context> section. So: &lt;cmd>Complete the
        dialog box.&lt;/cmd>&lt;tutorialinfo>For the example scenario, use the following values:&lt;dl>...&lt;/dl>&lt;/tutorialinfo><div>
          <p>Kris Eberlein, 19 October 2022</p>
          <p>I agree that a new example is needed. Can you draft one? FWIW, this example appears
            as-is since DITA 1.0. In DITA 1.0, the topic had the following short description:</p>
          <p>"The tutorial info (&lt;tutorialinfo>) element contains information that is included in
            a step when a task is part of a tutorial. The &lt;tutorialinfo> element allows you to
            turn a task into a learning exercise by including explanatory content about methods for
            completing the current step. The information should be excluded when a task is processed
            on its own."</p>
        </div><div>
          <p>Eliot Kimber, 29 Oct 2022</p>
          <p>The second and third sentences seem like they would be appropriate in Usage and
            Rendering Expectations respectively.</p>
        </div><div>
          <p>Kris Eberlein, 29 Oct 2022</p>
          <p>I agree that some of the DITA 1.0 content would be useful to have in a "Usage
            information" section. However, I don't think that the info about excluding content
            should go in a "Rendering expectations" section – it's just about basic conditional
            processing. (We tend to use "Rendering expectations" for information about what we
            expect processors to do vis-a-vis rendering the content, for example, that short
            descriptions should be rendered as the initial paragraphs.) It would be good if the
            example clearly had a value applied for a filtering attribute, however.</p>
          <p>I added a "Usage information" section with the following content: "The
            &lt;tutorialinfo> element enables task topics to be rendered as learning exercises. The
            element can contain explanatory information about a scenario, such as the data to use
            when completing a particular step in the exercise."</p>
        </div></draft-comment></example>
</refbody>
</reference>

