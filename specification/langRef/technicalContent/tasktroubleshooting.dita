<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="tasktroubleshooting" xml:lang="en-us">
  <title><xmlelement>tasktroubleshooting</xmlelement></title>
  <shortdesc>The <xmlelement>tasktroubleshooting</xmlelement> element contains troubleshooting
    information that is designed to help users remedy the situation when a task does not complete as
      expected.<draft-comment author="Bill Burns" disposition="Completed">Remove "troubleshooting"
      before information.<div>
        <p>Kris Eberlein, 26 October 2022</p>
        <p>Changed to "Task troubleshooting information is information that is designed to help
          users remedy the situation when a task does not complete as expected."</p>
      </div><div>
        <p>Eliot Kimber, 29 Oct 2022</p>
        <p>Same comment as for <xmlelement>steptroubleshooting</xmlelement>:</p>
        <p>Remove "that is designed ". Or perhaps completely replace with "contains information for
          responding when a task does not complete as expected."</p>
        <p>"remedy the situation" presumes that remediation is within the reader's power, which it
          may not be. For example, the troubleshooting may consist entirely of gather logs and
          messages and reporting it to support.</p>
      </div><div>
        <p>Kris Eberlein, 07 November 2022</p>
        <p>Changed to "Task troubleshooting information is information that is intended to help
          people respond to the situation if a task does not complete as expected."</p>
      </div></draft-comment><!--<draft-comment author="robander" time="21 may 2021">Can we delete the word "users" here but otherwise leave this unchanged?<div><p>Kris Eberlein, 07 October 2022</p><p>I know that you do not like the term "users," but I suspect that it is used 30 times in this spec. Can you offer a replacement term? "Readers" is the only thing that comes quickly to mind. Is this a point that we should bring to the TC and see where the discussion goes?</p></div></draft-comment>--><draft-comment
      author="Stan Doherty" disposition="Closed">The most annoying processes that require
      troubleshooting are those that complete successfully but return inaccurate data or no data. <div>
        <p>Kris Eberlein, 31 October 2022</p>
        <p>For sure. Unfortunately, I don't think the spec or TC can do much about that ...</p>
      </div></draft-comment></shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm><xmlelement>tasktroubleshooting</xmlelement></indexterm>
        <indexterm>task
          elements<indexterm><xmlelement>tasktroubleshooting</xmlelement></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="usage-information">
      <title>Usage information</title>
      <p>In particular, the <xmlelement>tasktroubleshooting</xmlelement> element can be used to
        explain how users can recover when the results of a task do not match those listed in the
          <xmlelement>result</xmlelement> element. The troubleshooting remedy typically contains one
        or more actions for solving a problem. For complex remedies, link to another
          task.<draft-comment author="Eliot Kimber" disposition="Completed">Remove "In particular,
          ". Doesn't add anything and there's no obvious antecedent.<div>
            <p>Kris Eberlein, 29 October 2022</p>
            <p>Done.</p>
          </div></draft-comment></p>
      <note type="tip">Do not use <codeph>&lt;note type="trouble"></codeph> inside of the
          <xmlelement>tasktroubleshooting</xmlelement> element.</note>
      <draft-comment author="dstevens73" disposition="Completed">again, would be helpful to say why<div>
          <p>Kris Eberlein, 19 October 2022</p>
          <p>Duplicate comment to that in &lt;steptroubleshooting>.</p>
        </div><div>
          <p>Kris Eberlein, 20 October 2022</p>
          <p>I talked with Dawn today. We both agree that this note should be removed. It's
            appropriate for guidelines for an implementation, but not the spec. And I removed it
            from this topic and the &lt;tasktroubleshooting> topic.</p>
        </div></draft-comment>
      <!--<draft-comment author="robander" time="21 may 2021">I don't understand how this would be ambiguous, but it does feel like it would be redundant?<p>Also, I wonder if we should restore some of the commented section here, it's the first case I've seen so far where the content seems to provide new information (correlating this with the result element), but maybe this is not correct?</p><div><p>Kris Eberlein, 07 October 2022</p><p>Re the note: This was something that JoAnn and Bob thought was important in the DITA 1.3 development cycle. Perhaps we should remove or edit it? I think the ambigiuty would be what does it mean to have such a note in a section that is about troubleshooting? Are you providing information about how to troubleshoot when troubleshooting goes awry? Or is it simply redundant info?</p><p>I restored the commented out info. The sentence "For complex remedies, link to another task.", while sound advise, sounds a bit like tutorial/author guidance/best practices. Are we more open to that in this spec than in the base spec?</p></div></draft-comment>-->
    </section>
    <section id="specialization-hierarchy">
      <title>Specialization hierarchy</title>
      <p>The <xmlelement>tasktroubleshooting</xmlelement> element is specialized from
          <xmlelement>section</xmlelement>. It is defined in the task module.</p>
    </section>
    <section id="attributes">
      <title>Attributes</title>
      <p conkeyref="reuse-attributes/only-universal"/>
    </section>
    <example id="example" otherprops="examples">
      <title>Example</title>
      <p>In the following code sample, the <xmlelement>tasktroubleshooting</xmlelement> element
        contains brief information that explains the steps that the user can take when the results
        of a task are not as expected. For a complex remedy, the author could provide a link to
        another task topic.</p>
      <codeblock>&lt;task id="add-new-categories>
  &lt;title>Adding new user categories&lt;/title>
  &lt;taskbody>
    &lt;steps>
    &lt;!-- ... -->
    &lt;/steps>
    &lt;result>
      &lt;p>The User Type menu displays the new types you added.&lt;/p>
    &lt;/result>
    <b>&lt;tasktroubleshooting></b>
      &lt;p>If the User Type menu does not display the additions, try
      one or more of the following:
        &lt;ul>
          &lt;li>Refresh the page&lt;/li>
          &lt;li>Verify that Add Types window is not still open; if so, 
           go to it and press &lt;uicontrol>OK&lt;/uicontrol>.&lt;/li>
        &lt;/ul>
      &lt;/p>
    <b>&lt;/tasktroubleshooting></b>
  &lt;/taskbody>
      </codeblock>
      <draft-comment author="Eliot Kimber" disposition="Closed">I know it's simply the history of
        how DITA evolved but this example really highlights the lack of any kind of general decision
        tree element that could go here.<div>
          <p>Kris Eberlein, 29 October 2022</p>
          <p>If my memory is correct, this is one of the examples for the DITA 1.3 proposal that Bob
            Thomas and Joann championed.</p>
        </div></draft-comment>
    </example>
  </refbody>
</reference>
